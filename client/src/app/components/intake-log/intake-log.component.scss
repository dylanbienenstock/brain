@import "variables";
@import "mixins";

@include has-inputs;

.loading {
    @include loading;
}

.container {
    @include page;

    &.show-new-entry {
        display: grid;
        grid-template-columns: auto 350px;

        @include mobile {
            grid-template-columns: 100vw 100vw;
        }
    }

    &.entry-selected {
        @include mobile {
            transform: translateX(-100vw);
        }
    }

    .entry {
        display: grid;
        grid-template-rows: ($cell-size * 4) auto;

        @include mobile {
            grid-template-rows: ($cell-size-mobile * 4) auto;

            .top-tile {
                grid-template-rows: repeat(4, $cell-size-mobile) auto !important;
            }
        }

        &.hide-top-tile {
            grid-template-rows: auto;
            
            color: red !important;
        }

        .top-tile {
            @include tile(false);

            display: grid;
            grid-template-rows: repeat(4, $cell-size) auto;
            grid-template-columns: repeat(2, 1fr);
            grid-template-areas:
                "name name"
                "amou amou"
                "time time"
                "food ntbl"
            ;

            .entry-name    { grid-area: name; }
            .entry-amount  { grid-area: amou; }
            .entry-time    { grid-area: time; }
            .entry-type    { grid-area: food; }
            .entry-notable { grid-area: ntbl; }

            & > * {
                @include tile-hover;

                height: 100%;
                box-sizing: border-box;
            }

            .entry-name,
            .entry-amount,
            .entry-time {
                &.active {
                    @include tile-active;
                }

                .text {
                    @include ellipsis;
                    @include tile-text-left;

                    width: calc(100% - 32px);
                }
            }

            .entry-time {
                &.invalid {
                    .text, input[type=text] {
                        color: hsl(50, 100%, 45%) !important;
                    }
                }
            }

            .entry-type,
            .entry-notable {
                .text {
                    &.placeholder {
                        @include tile-text-left;
                    }

                    &:not(.placeholder) {
                        @include tile-text;
    
                        &.on  { color: hsl(120, 100%, 30%); }
                        &.off { color: hsl(0, 100%, 45%); }
                    }
                }
            }
        }

        .entry-desc {
            @include tile(true);

            box-sizing: border-box;

            &.active {
                @include tile-active;
            }

            .text {
                display: inline-block;
                width: 100%;
                padding: 16px;

                color: darken(white, 20%);
                font-size: $font-size;

                white-space: pre-line;

                @include mobile {
                    font-size: $font-size-mobile;
                }
            }
        }

        input[type=text] {
            padding: 0 16px;
            box-sizing: content-box;
        }
    }
}