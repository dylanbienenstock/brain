@import "mixins";
@import "variables";

$list-width: 350px;
$task-details-width: 350px;

.placeholder {
    pointer-events: none;
    color: rgba(darken(white, 20%), 0.25) !important;
}

input[type=text] {
    width: calc(100% - 32px);
    padding: 0;
    margin: 0;
    background: transparent;
    height: $cell-size;

    @include mobile {
        height: $cell-size-mobile;
    }
}

.container {
    @include page;

    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: $list-width auto $task-details-width;

    @include mobile {
        grid-template-columns: 100vw 100vw 100vw;
        transition: transform 300ms ease;
    }

    &.view-one { transform: translateX(0); }
    &.view-two { transform: translateX(-100vw); }
    &.view-three { transform: translateX(-200vw); }

    .list-section {
        display: grid;
        grid-template-rows: $cell-size auto;
        overflow: hidden;

        @include mobile {
            grid-template-rows: $cell-size-mobile auto;
        }

        @include not-mobile {
            box-shadow: 0 0 12px black;
            z-index: 2;
        }

        .list-header {
            @include tile(false);

            display: grid;
            grid-template-columns: auto repeat(2, $cell-size);

            @include mobile {
                grid-template-columns: auto repeat(2, $cell-size-mobile);
            }

            .label {
                .text {
                    @include tile-text-left;
                }
            }

            .list-create,
            .list-delete-toggle {
                .text {
                    @include tile-text;
                }
            }

            .list-create { @include tile-accept; }
            .list-delete-toggle {
                @include tile-reject;

                &.deleting {
                    @include tile-accept
                }
            }
        }

        .list-container {
            @include tile(false);

            overflow-x: hidden;
            overflow-y: auto;

            .list {
                @include tile-hover;

                height: $cell-size;

                @include mobile {
                    height: $cell-size-mobile !important;
                }

                &.selected {
                    @include tile-active;
                    
                    pointer-events: none;
                }

                &.deleting {
                    pointer-events: none;

                    display: grid;
                    grid-template-columns: auto $cell-size;

                    background: transparent !important;

                    @include mobile {
                        grid-template-columns: auto $cell-size-mobile;
                    }

                    .text.name {
                        height: min-content;
                    }
                }

                .list-delete {
                    @include tile-reject;

                    pointer-events: all;
                }

                .text.name {
                    @include tile-text-left;
                    @include ellipsis;

                    max-width: calc(100% - 32px);
                }

                .text.delete {
                    @include tile-text;
                }
            }
        }
    }

    .task-section {
        display: grid;
        grid-template-rows: ($cell-size * 3) auto;
        overflow: hidden;

        @include mobile {
            grid-template-rows: ($cell-size-mobile * 2) auto;
        }

        @include not-mobile {
            box-shadow: 0 0 12px black;
            z-index: 1;
        }

        .task-header {
            @include tile(false);

            display: grid;
            grid-template-rows: 1fr 1fr 1fr;
            grid-template-columns: auto repeat(2, $cell-size);
            grid-template-areas:
                "name delete create"
                "desc desc desc"
                "info info info"
            ;

            @include mobile {
                grid-template-rows: 1fr 1fr;
                grid-template-columns: auto repeat(2, $cell-size-mobile);
                grid-template-areas:
                    "name delete create"
                    "desc desc desc"
                ;
            }
            
            &.deleting {
                pointer-events: none;
            }

            .list-name          { grid-area: name; }
            .list-desc          { grid-area: desc; }
            .list-info          { grid-area: info; }
            .task-delete-toggle { grid-area: delete; }
            .task-create        { grid-area: create; }

            > :not(.list-delete) {
                .text {
                    @include tile-text-left;
                }
            }

            .list-name,
            .list-desc,
            .list-info {
                span.text {
                    @include ellipsis;
                    max-width: calc(100% - 32px);
                }
            }
            
            .list-name {
                width: calc(100% + #{ $cell-size * 2 });

                .text {
                    display: flex;
                    flex-flow: row nowrap;

                    .icon {
                        display: inline-block;
                        position: relative;
                        top: 50%;
                        transform: translateY(-50%);
                    }

                    .input-container {
                        flex: 1;

                        input[type=text] {
                            height: 24px !important;
                            position: relative;
                            top: 50%;
                            transform: translateY(calc(-50% + 0.5px));

                            &::placeholder {
                                color: rgba(darken(white, 20%), 0.25);
                            }
                        }
                    }
                }
            }

            .list-desc,
            .list-info {
                .text {
                    color: rgba(darken(white, 20%), 0.5);
                }

                input[type=text] {
                    color: rgba(darken(white, 20%), 0.5) !important;

                    &::placeholder {
                        color: rgba(darken(white, 20%), 0.25) !important;
                        opacity: 1;
                    }
                }
            }

            .task-delete-toggle,
            .task-create {
                z-index: 1;

                .text {
                    @include tile-text;
                }
            }

            .task-create { @include tile-accept; }

            .task-delete-toggle {
                @include tile-reject;

                &:not(.placeholder) {
                    pointer-events: all;
                }

                &.deleting {
                    @include tile-accept;
                }
            }
            

            .hoverable { @include tile-hover; }
            .active { @include tile-active; }
        }

        .task-container {
            overflow: hidden;

            .task-container-inner {
                @include tile(false);

                height: 100%;
                overflow-x: hidden;
                overflow-y: auto;
    
                .task {
                    display: grid;
                    grid-template-columns: $cell-size auto;
                    height: $cell-size;

                    @include mobile {
                        grid-template-columns: $cell-size-mobile auto;
                        height: $cell-size-mobile;  
                    }

                    @include tile-hover;

                    &.active {
                        @include tile-active;

                        pointer-events: none;
                    }

                    &.deleting {
                        grid-template-columns: $cell-size auto $cell-size;
                        background: transparent !important;
                        pointer-events: none;
    
                        @include mobile {
                            grid-template-columns: $cell-size-mobile auto $cell-size-mobile;
                        }
                    }

                    .task-checkbox {
                        z-index: 1;
                        pointer-events: all;

                        .text {
                            @include tile-text;

                            transform: translate(-50%, calc(-50% - 1.5px));
                        }
                    }

                    .task-details {
                        &.completed {
                            .text {
                                .task-name {
                                    text-decoration: line-through;
                                    opacity: 0.25;
                                }
                            }
                        }

                        .text {
                            @include tile-text-left;

                            left: 0;

                            .task-info {
                                font-size: 0;

                                span {
                                    font-size: 14px;
                                    color: rgba(darken(white, 20%), 0.5);

                                    @include mobile {
                                        font-size: 12px;
                                    }
                                }

                                .urgent {
                                    color: hsl(0, 100%, 45%);
                                }

                                span + span {
                                    &:before {
                                        content: " â€¢";
                                    }
                                }
                            }
                        }
                    }

                    .task-delete {
                        @include tile-reject;
                        pointer-events: all;

                        .text {
                            @include tile-text;
                        }
                    }
                }
            }
        }
    }

    .task-details-section {
        display: grid;
        grid-template-rows: ($cell-size * 3) auto;

        @include mobile {
            grid-template-rows: ($cell-size-mobile * 3) auto;
        }

        &.hide-top-tile {
            grid-template-rows: auto;
        }

        .top-tile {
            @include tile(false);

            display: grid;
            grid-template-rows: repeat(3, $cell-size);
            grid-template-columns: repeat(2, 1fr);
            grid-template-areas: 
                "name name"
                "date date"
                "completed urgent"
            ;

            @include mobile {
                grid-template-rows: repeat(3, $cell-size-mobile);
            }
        }

        ::placeholder {
            color: rgba(darken(white, 20%), 0.25);
        }

        .task-name { grid-area: name; }
        .task-date { grid-area: date; }
        .task-completed { grid-area: completed; }
        .task-urgent { grid-area: urgent; }
        
        .task-name,
        .task-date,
        .task-completed,
        .task-urgent {
            @include tile-hover;

            &.active {
                @include tile-active;
            }
        }

        .task-name,
        .task-date {
            .text {
                @include tile-text-left;
            }
        }

        .task-date {
            &.invalid {
                .text {
                    color: hsl(50, 100%, 45%) !important;
                }
            }
        }

        .task-completed,
        .task-urgent {
            .text {
                pointer-events: none;

                &:not(.left) {
                    @include tile-text;
                }

                &.left {
                    @include tile-text-left;
                }

                &.good {
                    color: hsl(120, 100%, 30%);
                }

                &.bad {
                    color: hsl(0, 100%, 45%);
                }
            }
        }

        .task-urgent {
            .text.left {
                left: 0px;
            }
        }

        .task-desc {
            @include tile(true);

            &.active {
                @include tile-active;
            }

            .text {
                font-size: $font-size;

                @include mobile {
                    font-size: $font-size-mobile;
                }
            }

            span.text {
                display: inline-block;
                width: 100%;
                margin: 16px;
                user-select: none;
                white-space: pre-line;
            }

            textarea.text {
                width: 100%;
                height: 100%;
                
                padding: 16px;
                box-sizing: border-box;
                
                background: transparent;
                
                border: 0;
                outline: 0;
            }
        }
    }
}